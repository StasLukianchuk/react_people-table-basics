{"version":3,"sources":["components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["PersonLink","person","selectedPerson","useParams","slug","name","sex","born","died","fatherName","motherName","mother","father","className","classNames","to","PeopleTable","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","toFindParents","personName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","areNoPeople","setAreNoPeople","loadPeople","useCallback","peopleFromServer","peopleWithPearents","length","useEffect","PageNavLink","text","isActive","NavBar","role","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1d487e88.chunk.js","sourcesContent":["import { NavLink, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug: selectedPerson } = useParams();\n\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': slug === selectedPerson,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`../${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      {mother ? (\n        <td>\n          <NavLink\n            to={`../${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {motherName}\n          </NavLink>\n        </td>\n      ) : (\n        <td>{motherName || '-'}</td>\n      )}\n\n      {father ? (\n        <td>\n          <NavLink\n            to={`../${father.slug}`}\n          >\n            {fatherName}\n          </NavLink>\n        </td>\n      ) : (\n        <td>{fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <div className=\"block\">\n    <div className=\"box table-container\">\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <PersonLink person={person} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, {\n  useCallback, useEffect, useState,\n} from 'react';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\n\nconst toFindParents = (people: Person[], personName: string | null) => {\n  const personParent = people.find(({ name }) => name === personName);\n\n  return personParent;\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [areNoPeople, setAreNoPeople] = useState(false);\n\n  const loadPeople = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      const peopleWithPearents = peopleFromServer.map(person => {\n        return (\n          {\n            ...person,\n            mother: toFindParents(peopleFromServer, person.motherName),\n            father: toFindParents(peopleFromServer, person.fatherName),\n          }\n        );\n      });\n\n      if (peopleWithPearents.length === 0) {\n        setAreNoPeople(true);\n      }\n\n      setPeople(peopleWithPearents);\n    } catch {\n      setError('Something went wrong');\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {error}\n        </p>\n      )}\n\n      {areNoPeople && (\n        <p data-cy=\"noPeopleMessage\" className=\"has-text-danger\">\n          There are no people on server\n        </p>\n      )}\n\n      {!error && !areNoPeople && (\n        isLoading\n          ? <Loader />\n          : (\n            <PeopleTable\n              people={people}\n            />\n          )\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    ))}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}