{"version":3,"sources":["components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["PeopleTable","people","className","map","name","sex","born","died","fatherName","motherName","slug","href","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","loadPeople","useCallback","peopleFromServer","useEffect","PageNavLink","to","text","isActive","classNames","NavBar","role","App","path","element","createRoot","document","getElementById","render"],"mappings":"iRAOaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,wBACE,UAAQ,cACRA,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGD,EAAOE,KAAI,gBACVC,EADU,EACVA,KACAC,EAFU,EAEVA,IACAC,EAHU,EAGVA,KACAC,EAJU,EAIVA,KACAC,EALU,EAKVA,WACAC,EANU,EAMVA,WACAC,EAPU,EAOVA,KAPU,OASV,qBACE,UAAQ,SADV,UAIE,6BACE,mBAAGC,KAAI,kBAAaD,GAApB,SACGN,MAIL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKE,GAAc,MACnB,6BAAKD,GAAc,QAZdE,EAXG,YAnBsB,ECErC,SAASE,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKnB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECMToB,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOtB,EAAP,KAAeuB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAaC,sBAAW,gCAAC,8GAE3BJ,GAAa,GAFc,SAGId,IAHJ,OAGrBmB,EAHqB,OAK3BP,EAAUO,GALiB,gDAO3BH,EAAS,wBAPkB,QAU7BF,GAAa,GAVgB,yDAW5B,IAMH,OAJAM,qBAAU,WACRH,GACD,GAAE,IAGD,qCACE,oBAAI3B,UAAU,QAAd,yBAECyB,GACC,mBAAG,UAAQ,qBAAqBzB,UAAU,kBAA1C,SACGyB,KAIHA,IACAF,EACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAaxB,OAAQA,OAIhC,E,iBCtCYgC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJhC,UAAW,gBAAGkC,EAAH,EAAGA,SAAH,OAAmBC,IAC5B,cAAe,CAAE,8BAA+BD,GADvC,EAFb,SAMGD,GAPuC,ECP/BG,EAAmB,kBAC9B,qBACE,UAAQ,MACRpC,UAAU,iCACVqC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKrC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAagC,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,UAAUC,KAAK,iBAVP,ECInBK,EAAgB,kBAC3B,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMtC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuC,KAAK,IAAIC,QAAS,oBAAIxC,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOuC,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUR,GAAG,QAC1C,cAAC,IAAD,CACEO,KAAK,UACLC,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIxC,UAAU,QAAd,uCAfQ,ECE7ByC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.7f56cff8.chunk.js","sourcesContent":["import React from 'react';\nimport { Person } from '../../types';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <div className=\"block\">\n    <div className=\"box table-container\">\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(({\n            name,\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          }) => (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n            >\n              <td>\n                <a href={`/people/${slug}`}>\n                  {name}\n                </a>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{motherName || '-'}</td>\n              <td>{fatherName || '-'}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import {\n  useCallback, useEffect, useState,\n} from 'react';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const loadPeople = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setError('Something went wrong');\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {error}\n        </p>\n      )}\n\n      {!error && (\n        isLoading\n          ? <Loader />\n          : <PeopleTable people={people} />\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    ))}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}